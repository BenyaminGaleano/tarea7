{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/content/content.component.ts","webpack:///src/app/components/content/content.component.html","webpack:///src/app/components/ingreso-nota/ingreso-nota.component.ts","webpack:///src/app/components/ingreso-nota/ingreso-nota.component.html","webpack:///src/app/components/listado-nota/listado-nota.component.ts","webpack:///src/app/components/listado-nota/listado-nota.component.html","webpack:///src/app/services/webservice.service.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ContentComponent","router","url","navigateByUrl","navigate","IngresoNotaComponent","webservice","formbuilder","snack","form","group","nombre","nota_parcial1","nota_parcial2","nota_final","value","guardar","parseFloat","subscribe","data","open","comment","duration","reset","submit","ListadoNotaComponent","cols","list","Array","dataSource","notas","datos","forEach","element","push","console","log","dominio","header","headers","WebserviceService","http","post","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListadoNotaComponent } from './components/listado-nota/listado-nota.component';\nimport { IngresoNotaComponent } from './components/ingreso-nota/ingreso-nota.component';\n\n\nconst routes: Routes = [\n  {path: 'listado', component: ListadoNotaComponent},\n  {path: 'registro', component: IngresoNotaComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tarea7';\n}\n","<app-content></app-content>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentComponent } from './components/content/content.component';\nimport { IngresoNotaComponent } from './components/ingreso-nota/ingreso-nota.component';\nimport { ListadoNotaComponent } from './components/listado-nota/listado-nota.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatInputModule} from '@angular/material/input';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatIconModule} from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule} from '@angular/material/table';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContentComponent,\n    IngresoNotaComponent,\n    ListadoNotaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatTableModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigate(url: string): void {\n    this.router.navigateByUrl(url);\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>Notas</span>\n    <span style=\"flex: 1 1 auto;\"></span>\n    <span type=\"button\" class=\"clickable\" (click)=\"navigate('registro')\">Registro</span>\n    <span class=\"clickable\" (click)=\"navigate('listado')\">Listado</span>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { WebserviceService } from '../../services/webservice.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-ingreso-nota',\n  templateUrl: './ingreso-nota.component.html',\n  styleUrls: ['./ingreso-nota.component.css']\n})\nexport class IngresoNotaComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(private webservice: WebserviceService, private formbuilder: FormBuilder, private snack: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.form = this.formbuilder.group({\n      nombre: [''],\n      nota_parcial1: [null],\n      nota_parcial2: [null],\n      nota_final: [null],\n    });\n   }\n\n  submit(): void {\n    if (this.form.value.nombre && this.form.value.nota_final && this.form.value.nota_parcial1 && this.form.value.nota_parcial2) {\n      this.webservice.guardar({\n        nombre: this.form.value.nombre,\n        nota_final: parseFloat(this.form.value.nota_final),\n        nota_parcial1: parseFloat(this.form.value.nota_parcial1),\n        nota_parcial2: parseFloat(this.form.value.nota_parcial2)\n      }).subscribe(\n        (data) => {\n          this.snack.open(data.comment, 'OK', {\n            duration: 2000\n          });\n        }\n      );\n      this.form.reset();\n    } else {\n      this.snack.open('Datos Inválidos', 'OK', {\n        duration: 2000\n      });\n    }\n  }\n}\n","<div align=center>\n  <form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <div class=\"container\" align=center>\n      <h2 style=\"color: white;\">Registro</h2>\n      <p>\n          <mat-form-field appearance=\"fill\" color=\"accent\">\n            <mat-label>Nombre</mat-label>\n            <input color=\"accent\" matInput placeholder=\"Pedro Martinez\" formControlName=\"nombre\">\n            <mat-icon style=\"color: white;\" matSuffix>face</mat-icon>\n            <mat-hint>Ej. Pedro Martinez</mat-hint>\n          </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"fill\" color=\"accent\">\n          <mat-label>Primer Parcial</mat-label>\n          <input color=\"accent\" matInput placeholder=\"100\" formControlName=\"nota_parcial1\">\n          <mat-icon style=\"color: white;\" matSuffix>score</mat-icon>\n          <mat-hint>Nota de evaluación</mat-hint>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"fill\" color=\"accent\">\n          <mat-label>Segundo Parcial</mat-label>\n          <input color=\"accent\" matInput placeholder=\"100\" formControlName=\"nota_parcial2\">\n          <mat-icon style=\"color: white;\" matSuffix>score</mat-icon>\n          <mat-hint>Nota de evaluación</mat-hint>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"fill\" color=\"accent\">\n          <mat-label>Examen Final</mat-label>\n          <input color=\"accent\" matInput placeholder=\"100\" formControlName=\"nota_final\">\n          <mat-icon style=\"color: white;\" matSuffix>score</mat-icon>\n          <mat-hint>Nota de evaluación</mat-hint>\n        </mat-form-field>\n      </p>\n      <button mat-raised-button>\n        <mat-icon style=\"color: white; margin-right: 10px;\">save</mat-icon>\n        Guardar\n      </button>\n    </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WebserviceService } from '../../services/webservice.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Estudiante } from '../../models/estudiante';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-listado-nota',\n  templateUrl: './listado-nota.component.html',\n  styleUrls: ['./listado-nota.component.css']\n})\nexport class ListadoNotaComponent implements OnInit {\n  dataSource: MatTableDataSource<Estudiante>;\n  cols: Array<string> = ['nombre', 'nota_parcial1', 'nota_parcial2', 'nota_final'];\n\n  constructor(private webservice: WebserviceService, private snack: MatSnackBar) { }\n\n  ngOnInit(): void {\n    const list: Array<Estudiante> = new Array<Estudiante>();\n    this.dataSource = new MatTableDataSource([]);\n    this.webservice.notas().subscribe((datos) => {\n      datos.data.forEach( (element: Estudiante) => {\n        list.push(element);\n      });\n      this.snack.open(datos.comment, 'OK', {\n        duration: 3000\n      });\n      this.dataSource.data = list;\n    });\n    console.log(this.dataSource.data);\n  }\n\n}\n","<table mat-table style=\"width: calc(100% - 40px); margin: 20px;\" class=\"mat-elevation-z8\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"nombre\">\n        <th mat-header-cell *matHeaderCellDef> Nombre </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.nombre}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nota_parcial1\">\n        <th mat-header-cell *matHeaderCellDef> EP1 </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.nota_parcial1}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nota_parcial2\">\n        <th mat-header-cell *matHeaderCellDef> EP2 </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.nota_parcial2}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"nota_final\">\n        <th mat-header-cell *matHeaderCellDef> EF </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.nota_final}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"cols\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: cols;\"></tr>\n</table>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Estudiante } from '../models/estudiante';\nimport { environment } from '../../environments/environment.prod';\nimport { Observable } from 'rxjs';\n\nconst dominio = environment.path;\nconst header = {\n  headers: new HttpHeaders({'Content-Type' : 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebserviceService {\n\n  constructor(private http: HttpClient) { }\n\n  guardar(datos: Estudiante): Observable<any> {\n    console.log(datos);\n    return this.http.post(dominio + '/nota', datos, header);\n  }\n\n  notas(): Observable<any> {\n    return this.http.get(dominio + '/notas', header);\n  }\n}\n","export const environment = {\n  production: true,\n  path: 'http://192.168.0.16/tarea7bk'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}